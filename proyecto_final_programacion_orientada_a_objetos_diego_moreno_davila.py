# -*- coding: utf-8 -*-
"""Proyecto Final - Programacion Orientada a Objetos - Diego Moreno Davila

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YuTs9JLUl9J_yyXzDwxDWBu-TCn4r0VI
"""

!pip install -q streamlit

!pip install streamlit yagmail

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import csv
# from datetime import datetime
# import yagmail
# import streamlit as st
# from random import choice
# 
# # Clase: GestorCumplea침os
# class GestorCumplea침os:
#     def __init__(self, archivo_datos="cumplea침os.csv"):
#         self.archivo_datos = archivo_datos
#         self.lista_cumplea침os = []
#         self.cargar_cumplea침os()
# 
#     def cargar_cumplea침os(self):
#         """Lee los datos de cumplea침os desde un archivo CSV."""
#         try:
#             with open(self.archivo_datos, mode='r', encoding='utf-8') as archivo:
#                 lector = csv.DictReader(archivo)
#                 self.lista_cumplea침os = list(lector)
#         except FileNotFoundError:
#             self.lista_cumplea침os = []
# 
#     def guardar_cumplea침os(self):
#         """Escribe los datos de cumplea침os al archivo CSV."""
#         with open(self.archivo_datos, mode='w', newline='', encoding='utf-8') as archivo:
#             columnas = ['nombre', 'correo', 'fecha_nacimiento']
#             escritor = csv.DictWriter(archivo, fieldnames=columnas)
#             escritor.writeheader()
#             escritor.writerows(self.lista_cumplea침os)
# 
#     def agregar_cumplea침os(self, nombre, correo, fecha_nacimiento):
#         """A침ade un nuevo cumplea침os a la lista."""
#         self.lista_cumplea침os.append({
#             "nombre": nombre.strip(),
#             "correo": correo.strip(),
#             "fecha_nacimiento": fecha_nacimiento
#         })
#         self.guardar_cumplea침os()
# 
#     def eliminar_cumplea침os(self, nombre):
#         """Elimina un cumplea침os basado en el nombre."""
#         nombre_normalizado = nombre.strip().lower()
#         cumplea침os_filtrados = [
#             c for c in self.lista_cumplea침os if c['nombre'].strip().lower() != nombre_normalizado
#         ]
#         if len(cumplea침os_filtrados) < len(self.lista_cumplea침os):
#             self.lista_cumplea침os = cumplea침os_filtrados
#             self.guardar_cumplea침os()
#             return True
#         return False
# 
#     def cumplea침os_proximos(self):
#         """Retorna una lista de cumplea침os pr칩ximos ordenados."""
#         hoy = datetime.now().date()
#         proximos = []
#         for registro in self.lista_cumplea침os:
#             fecha_nac = datetime.strptime(registro['fecha_nacimiento'], '%Y-%m-%d').date()
#             proximo = fecha_nac.replace(year=hoy.year)
#             if proximo < hoy:
#                 proximo = proximo.replace(year=hoy.year + 1)
#             dias_restantes = (proximo - hoy).days
#             proximos.append({
#                 "nombre": registro['nombre'],
#                 "correo": registro['correo'],
#                 "fecha_nacimiento": registro['fecha_nacimiento'],
#                 "dias_restantes": dias_restantes
#             })
#         return sorted(proximos, key=lambda x: x['dias_restantes'])
# 
# 
# # Clase: EnvioCorreo
# class EnvioCorreo:
#     def __init__(self, email_origen, clave):
#         self.email_origen = email_origen
#         self.clave = clave
#         try:
#             self.cliente_yagmail = yagmail.SMTP(user=self.email_origen, password=self.clave)
#         except Exception as error:
#             raise Exception(f"Error al configurar la conexi칩n de correo: {error}")
# 
#     def enviar_correo(self, email_destino, asunto, contenido):
#         """Env칤a un correo electr칩nico."""
#         try:
#             self.cliente_yagmail.send(
#                 to=email_destino,
#                 subject=asunto,
#                 contents=contenido
#             )
#         except Exception as error:
#             raise Exception(f"Error al enviar el correo: {error}")
# 
#     def mensaje_aleatorio(self, archivo_mensajes="mensajes.txt"):
#         """Obtiene un mensaje aleatorio desde un archivo."""
#         try:
#             with open(archivo_mensajes, 'r', encoding='utf-8') as archivo:
#                 mensajes = archivo.readlines()
#             return choice(mensajes).strip()
#         except FileNotFoundError:
#             return "춰Feliz cumplea침os! 游꿀"
# 
# 
# # Configuraci칩n de la aplicaci칩n Streamlit
# gestor = GestorCumplea침os()
# correo = EnvioCorreo(
#     email_origen="diego.moreno0250@alumnos.udg.mx",
#     clave="xrte gcau pbay kkbr"
# )
# 
# st.title("Administrador de Cumplea침os 游꾹")
# 
# # Registrar un nuevo cumplea침os
# st.header("A침adir Cumplea침os")
# nombre = st.text_input("Nombre")
# correo_electronico = st.text_input("Correo Electr칩nico")
# fecha = st.date_input("Fecha de Nacimiento", min_value=datetime(1900, 1, 1), max_value=datetime.now())
# if st.button("Guardar Cumplea침os"):
#     if nombre and correo_electronico and fecha:
#         gestor.agregar_cumplea침os(nombre, correo_electronico, fecha.strftime('%Y-%m-%d'))
#         st.success("Cumplea침os a침adido correctamente.")
#     else:
#         st.error("Por favor completa todos los campos.")
# 
# # Mostrar cumplea침os pr칩ximos
# st.header("Cumplea침os Pr칩ximos")
# cumplea침os = gestor.cumplea침os_proximos()
# if cumplea침os:
#     for persona in cumplea침os:
#         st.write(f"{persona['nombre']} - {persona['dias_restantes']} d칤as ({persona['fecha_nacimiento']})")
# else:
#     st.write("No hay cumplea침os pr칩ximos registrados.")
# 
# # Eliminar cumplea침os
# st.header("Eliminar Cumplea침os")
# nombre_eliminar = st.text_input("Nombre del contacto a eliminar")
# if st.button("Eliminar Cumplea침os"):
#     if nombre_eliminar:
#         try:
#             eliminado = gestor.eliminar_cumplea침os(nombre_eliminar.strip())
#             if eliminado:
#                 st.success(f"El cumplea침os de {nombre_eliminar} ha sido eliminado correctamente.")
#                 print(f"Cumplea침os eliminado: {nombre_eliminar}")  # Depuraci칩n
#             else:
#                 st.error(f"No se encontr칩 ning칰n cumplea침os con el nombre: {nombre_eliminar}.")
#                 print(f"No se encontr칩 el cumplea침os de: {nombre_eliminar}")  # Depuraci칩n
#         except Exception as e:
#             st.error(f"Error al intentar eliminar el cumplea침os de {nombre_eliminar}: {e}")
#             print(f"Error al eliminar el cumplea침os: {e}")  # Depuraci칩n
#     else:
#         st.error("Por favor, ingresa un nombre para eliminar.")
# 
# 
# # Enviar felicitaciones
# st.header("Enviar Felicitaciones Hoy")
# if st.button("Enviar Felicitaciones Hoy"):
#     hoy = datetime.now().date()
#     enviados = False  # Variable para rastrear si se envi칩 al menos un correo
#     for persona in gestor.lista_cumplea침os:
#         try:
#             # Convertir la fecha de nacimiento desde el archivo CSV
#             fecha_nac = datetime.strptime(persona['fecha_nacimiento'], '%Y-%m-%d').date()
#             print(f"Revisando: {persona['nombre']} - Fecha Nacimiento: {fecha_nac}")  # Depuraci칩n
#             # Verificar si el cumplea침os es hoy
#             if fecha_nac.month == hoy.month and fecha_nac.day == hoy.day:
#                 print(f"Hoy es el cumplea침os de {persona['nombre']}")  # Depuraci칩n
#                 # Obtener mensaje aleatorio y enviar el correo
#                 mensaje = correo.mensaje_aleatorio()
#                 correo.enviar_correo(
#                     email_destino=persona['correo'],
#                     asunto="춰Feliz Cumplea침os! 游꿀",
#                     contenido=mensaje
#                 )
#                 st.success(f"Felicitaci칩n enviada a {persona['nombre']}")
#                 enviados = True
#         except ValueError:
#             # Manejar errores de formato de fecha
#             st.error(f"Fecha inv치lida para {persona['nombre']}: {persona['fecha_nacimiento']}")
#             print(f"Error: Fecha inv치lida para {persona['nombre']}: {persona['fecha_nacimiento']}")  # Depuraci칩n
#         except Exception as e:
#             # Manejar errores generales en el env칤o de correos
#             st.error(f"No se pudo enviar correo a {persona['nombre']}: {e}")
#             print(f"Error al enviar correo a {persona['nombre']}: {e}")  # Depuraci칩n
#     # Si no se enviaron felicitaciones
#     if not enviados:
#         st.info("No hay cumplea침os hoy o no se pudieron enviar felicitaciones.")
#

!npm install localtunnel

!streamlit run /content/app.py &>/content/logs.txt &

!npx localtunnel --port 8501